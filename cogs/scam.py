from aiohttp.helpers import ProxyInfo
import discord
from discord.ext import commands
import aiohttp
import asyncio
import re
import requests
import settings
from utils.languageembed import languageEmbed

async def get_domain_name_from_url(url):
    return url.split("//")[-1].split("/")[0]

with open("data/phishing.txt") as f:
    phishing = [x.strip() for x in f.readlines()] 

async def get_link_bypassing(url):
    return requests.Session().head(url,allow_redirects=True).url

async def check_scam_link(message):
    link = re.search("(?P<url>https?://[^\s]+)", message.content)

    if link != None:
        link = link.group("url")
        if "bit.ly" in link:
            url = await get_link_bypassing(link)
        domain = await get_domain_name_from_url(url)
        if domain in phishing:
            await message.delete()
            await message.channel.send(f"{message.author.mention} Please do not send a scam link here.")
            
    else:
        pass

class Scram(commands.Cog):
    def __init__(self,bot):
        self.bot = bot
    
    @commands.group(invoke_without_command=True)
    async def scram(self,ctx):
        languageserver = await settings.collectionlanguage.find_one({"guild_id":ctx.guild.id})
        if languageserver is None:
            message = await ctx.send(embed=languageEmbed.languageembed(self,ctx))
            await message.add_reaction('üëç')
        
        else:
            if languageserver == "Thai":
                embed = discord.Embed(
                    title = "Scram command information",
                    colour = 0xFED000,
                )
                embed.add_field(name="Add",value="`scram add [link]`")
                embed.add_field(name="Remove",value="`scram remove [link]`")
                embed.add_field(name="üì¢‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏",value="""```
[] ‡∏Ñ‡∏∑‡∏≠ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà
/ ‡∏Ñ‡∏∑‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠
<> ‡∏Ñ‡∏∑‡∏≠ ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÉ‡∏™‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡∏Å‡πá‡πÑ‡∏î‡πâ``````
‚Ä¢ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡∏Ñ‡∏ß‡∏£‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏°‡∏µ‡∏ö‡∏ó‡∏ö‡∏≤‡∏ó Administrator (‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÄ‡πÄ‡∏•)
‚Ä¢ ‡∏ü‡∏±‡∏á‡∏ä‡∏±‡πà‡∏ô‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡πç‡∏≤‡∏á‡∏≤‡∏ô‡πÉ‡∏ô‡πÄ‡πÄ‡∏ä‡∏ó‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß‡πÑ‡∏î‡πâ
```
""", Inline=False)
            elif languageserver == "English":
                embed = discord.Embed(
                    title = "Scram command information",
                    colour = 0xFED000,
                )
                embed.add_field(name="Add",value="`scram add [link]`")
                embed.add_field(name="Remove",value="`scram remove [link]`")
                embed.add_field(name="üì¢Note",value="""```
[] = required
/ = or
<> = optional``````
‚Ä¢ In order for bots to use all functions, bots should have Administrator permission.
‚Ä¢ The function cannot work in private chat.
```
""", Inline=False)


    @scram.command()
    async def add(self,ctx,link):
        pass


    @scram.command()
    async def remove(self,ctx,link):
        pass



def setup(bot):
    bot.add_cog(Scram(bot))